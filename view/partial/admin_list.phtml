<?php

/* 
 * Copyright (C) 2014 schurix
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

$paginatorCreater = function($rows, $page_length, $page){
	if (is_array($rows)) {
		$paginator = new Zend\Paginator\Paginator(new Zend\Paginator\Adapter\ArrayAdapter($rows));
	} elseif($rows instanceof Traversable && !($rows instanceof Zend\Paginator\Paginator)) {
		$paginator = new Zend\Paginator\Paginator(new Zend\Paginator\Adapter\Iterator($rows));
	} else {
		$paginator = $rows;
	}

	$paginator->setItemCountPerPage($page_length);
	$paginator->setCurrentPageNumber($page);
	return $paginator;
};

?>

<h1><?php echo $this->translate($this->title) ?></h1>

<div class="navbar filter-bar">
    <div class="navbar-inner">
		<div class="pull-left">
			<?php if(!empty($this->parent_route_title)) : ?>
				<?php $parentRoute = call_user_func($this->parent_route_builder); ?>
	            <a href="<?php echo $parentRoute ?>" class="btn btn-primary">
					<i class="glyphicon glyphicon-chevron-left"></i> <?php echo $this->translate($this->parent_route_title) ?>
	            </a>
			<?php endif; ?>
		</div>
		
        <div class="pull-right">
			<?php $createRoute = call_user_func($this->route_builder, "create"); ?>
			<?php if(!empty($createRoute)) : ?>
	            <a href="<?php echo $createRoute ?>" class="btn btn-primary">
	                <?php echo $this->translate($this->create_text) ?>
	            </a>
			<?php endif; ?>
        </div>
    </div>
</div>

<?php

$paginator = $paginatorCreater($this->rows, $this->page_length, $this->page);

$getters = array();
foreach ($this->columns as $element) {
	$getters[$element] = call_user_func($this->getter_creator, $element);
}

$idGetter = call_user_func($this->getter_creator, $this->id_name);
$aliasGetter = call_user_func($this->getter_creator, $this->alias_name);

$columns = array();
foreach($this->columns as $name => $element){
	$columns[] = (object)array(
		'displayText' => $name,
		'key' => $element,
		'getter' => $getters[$element]
	);
}

echo $this->partial('partial/admin_list_table.phtml', array(
	'paginator' => $paginator,
	'columns' => $columns,
	'route_builder' => $this->route_builder,
	'id_getter' => $idGetter,
	'alias_getter' => $aliasGetter,
	'delete_warning_text' => $this->delete_warning_text,
	'child_routes' => empty($this->child_routes) ? array() : $this->child_routes,
	'child_route_builder' => $this->child_route_builder,
));